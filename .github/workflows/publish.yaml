name: Build, Test, and Publish

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  build-test-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
      - name: Tag with the release version
        run: |
          git tag $(cat version.txt)
      - name: Install Python dependencies
        run: |
          /bin/bash -x run.sh install
      - name: Lint, Format, and other static code quality checks
        run: |
          /bin/bash -x run.sh lint:ci
      - name: Build python package
        run: |
          /bin/bash -x run.sh build

      - name: Publish to TestPyPI
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          /bin/bash -x run.sh publish:test
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
      - name: Publish to Prod PyPI
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          /bin/bash -x run.sh publish:prod
        env:
          PROD_PYPI_TOKEN: ${{ secrets.PROD_PYPI_TOKEN }}
      - name: Push tags
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git push origin --tags






  # https://docs.github.com/en/actions/learn-github-actions/contexts#example-printing-context-information-to-the-log
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
      - name: Dump secrets
        run: echo '${{ toJSON(secrets) }}'
      - name: Dump vars
        run: echo '${{ toJSON(vars) }}'
